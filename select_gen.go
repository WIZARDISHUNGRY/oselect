// Code generated by a tool. DO NOT EDIT.

package oselect

func Select2[T0, T1 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1)) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	}
}
func Select2Default[T0, T1 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), df func()) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	default:
		df()
	}
}
func Select2OK[T0, T1 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool)) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	}
}
func Select2DefaultOK[T0, T1 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), df func()) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	default:
		df()
	}
}
func Select3[T0, T1, T2 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2)) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	}
}
func Select3Default[T0, T1, T2 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), df func()) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	default:
		df()
	}
}
func Select3OK[T0, T1, T2 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool)) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	}
}
func Select3DefaultOK[T0, T1, T2 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), df func()) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	default:
		df()
	}
}
func Select4[T0, T1, T2, T3 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3)) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	}
}
func Select4Default[T0, T1, T2, T3 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3), df func()) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	default:
		df()
	}
}
func Select4OK[T0, T1, T2, T3 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool)) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	}
}
func Select4DefaultOK[T0, T1, T2, T3 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool), df func()) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	default:
		df()
	}
}
func Select5[T0, T1, T2, T3, T4 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3), c4 <-chan T4, f4 func(T4)) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	case v4 := <-c4:
		f4(v4)
	}
}
func Select5Default[T0, T1, T2, T3, T4 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3), c4 <-chan T4, f4 func(T4), df func()) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	case v4 := <-c4:
		f4(v4)
	default:
		df()
	}
}
func Select5OK[T0, T1, T2, T3, T4 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool), c4 <-chan T4, f4 func(T4, bool)) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	case v4, ok := <-c4:
		f4(v4, ok)
	}
}
func Select5DefaultOK[T0, T1, T2, T3, T4 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool), c4 <-chan T4, f4 func(T4, bool), df func()) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	case v4, ok := <-c4:
		f4(v4, ok)
	default:
		df()
	}
}
func Select6[T0, T1, T2, T3, T4, T5 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3), c4 <-chan T4, f4 func(T4), c5 <-chan T5, f5 func(T5)) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	case v4 := <-c4:
		f4(v4)
	case v5 := <-c5:
		f5(v5)
	}
}
func Select6Default[T0, T1, T2, T3, T4, T5 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3), c4 <-chan T4, f4 func(T4), c5 <-chan T5, f5 func(T5), df func()) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	case v4 := <-c4:
		f4(v4)
	case v5 := <-c5:
		f5(v5)
	default:
		df()
	}
}
func Select6OK[T0, T1, T2, T3, T4, T5 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool), c4 <-chan T4, f4 func(T4, bool), c5 <-chan T5, f5 func(T5, bool)) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	case v4, ok := <-c4:
		f4(v4, ok)
	case v5, ok := <-c5:
		f5(v5, ok)
	}
}
func Select6DefaultOK[T0, T1, T2, T3, T4, T5 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool), c4 <-chan T4, f4 func(T4, bool), c5 <-chan T5, f5 func(T5, bool), df func()) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	case v4, ok := <-c4:
		f4(v4, ok)
	case v5, ok := <-c5:
		f5(v5, ok)
	default:
		df()
	}
}
func Select7[T0, T1, T2, T3, T4, T5, T6 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3), c4 <-chan T4, f4 func(T4), c5 <-chan T5, f5 func(T5), c6 <-chan T6, f6 func(T6)) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	case v4 := <-c4:
		f4(v4)
	case v5 := <-c5:
		f5(v5)
	case v6 := <-c6:
		f6(v6)
	}
}
func Select7Default[T0, T1, T2, T3, T4, T5, T6 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3), c4 <-chan T4, f4 func(T4), c5 <-chan T5, f5 func(T5), c6 <-chan T6, f6 func(T6), df func()) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	case v4 := <-c4:
		f4(v4)
	case v5 := <-c5:
		f5(v5)
	case v6 := <-c6:
		f6(v6)
	default:
		df()
	}
}
func Select7OK[T0, T1, T2, T3, T4, T5, T6 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool), c4 <-chan T4, f4 func(T4, bool), c5 <-chan T5, f5 func(T5, bool), c6 <-chan T6, f6 func(T6, bool)) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	case v4, ok := <-c4:
		f4(v4, ok)
	case v5, ok := <-c5:
		f5(v5, ok)
	case v6, ok := <-c6:
		f6(v6, ok)
	}
}
func Select7DefaultOK[T0, T1, T2, T3, T4, T5, T6 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool), c4 <-chan T4, f4 func(T4, bool), c5 <-chan T5, f5 func(T5, bool), c6 <-chan T6, f6 func(T6, bool), df func()) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	case v4, ok := <-c4:
		f4(v4, ok)
	case v5, ok := <-c5:
		f5(v5, ok)
	case v6, ok := <-c6:
		f6(v6, ok)
	default:
		df()
	}
}
func Select8[T0, T1, T2, T3, T4, T5, T6, T7 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3), c4 <-chan T4, f4 func(T4), c5 <-chan T5, f5 func(T5), c6 <-chan T6, f6 func(T6), c7 <-chan T7, f7 func(T7)) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	case v6 := <-c6:
		f6(v6)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	case v4 := <-c4:
		f4(v4)
	case v5 := <-c5:
		f5(v5)
	case v6 := <-c6:
		f6(v6)
	case v7 := <-c7:
		f7(v7)
	}
}
func Select8Default[T0, T1, T2, T3, T4, T5, T6, T7 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3), c4 <-chan T4, f4 func(T4), c5 <-chan T5, f5 func(T5), c6 <-chan T6, f6 func(T6), c7 <-chan T7, f7 func(T7), df func()) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	case v6 := <-c6:
		f6(v6)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	case v4 := <-c4:
		f4(v4)
	case v5 := <-c5:
		f5(v5)
	case v6 := <-c6:
		f6(v6)
	case v7 := <-c7:
		f7(v7)
	default:
		df()
	}
}
func Select8OK[T0, T1, T2, T3, T4, T5, T6, T7 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool), c4 <-chan T4, f4 func(T4, bool), c5 <-chan T5, f5 func(T5, bool), c6 <-chan T6, f6 func(T6, bool), c7 <-chan T7, f7 func(T7, bool)) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	case v6, ok := <-c6:
		f6(v6, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	case v4, ok := <-c4:
		f4(v4, ok)
	case v5, ok := <-c5:
		f5(v5, ok)
	case v6, ok := <-c6:
		f6(v6, ok)
	case v7, ok := <-c7:
		f7(v7, ok)
	}
}
func Select8DefaultOK[T0, T1, T2, T3, T4, T5, T6, T7 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool), c4 <-chan T4, f4 func(T4, bool), c5 <-chan T5, f5 func(T5, bool), c6 <-chan T6, f6 func(T6, bool), c7 <-chan T7, f7 func(T7, bool), df func()) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	case v6, ok := <-c6:
		f6(v6, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	case v4, ok := <-c4:
		f4(v4, ok)
	case v5, ok := <-c5:
		f5(v5, ok)
	case v6, ok := <-c6:
		f6(v6, ok)
	case v7, ok := <-c7:
		f7(v7, ok)
	default:
		df()
	}
}
func Select9[T0, T1, T2, T3, T4, T5, T6, T7, T8 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3), c4 <-chan T4, f4 func(T4), c5 <-chan T5, f5 func(T5), c6 <-chan T6, f6 func(T6), c7 <-chan T7, f7 func(T7), c8 <-chan T8, f8 func(T8)) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	case v6 := <-c6:
		f6(v6)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	case v6 := <-c6:
		f6(v6)
		return
	case v7 := <-c7:
		f7(v7)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	case v4 := <-c4:
		f4(v4)
	case v5 := <-c5:
		f5(v5)
	case v6 := <-c6:
		f6(v6)
	case v7 := <-c7:
		f7(v7)
	case v8 := <-c8:
		f8(v8)
	}
}
func Select9Default[T0, T1, T2, T3, T4, T5, T6, T7, T8 any](c0 <-chan T0, f0 func(T0), c1 <-chan T1, f1 func(T1), c2 <-chan T2, f2 func(T2), c3 <-chan T3, f3 func(T3), c4 <-chan T4, f4 func(T4), c5 <-chan T5, f5 func(T5), c6 <-chan T6, f6 func(T6), c7 <-chan T7, f7 func(T7), c8 <-chan T8, f8 func(T8), df func()) {
	select {
	case v0 := <-c0:
		f0(v0)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	case v6 := <-c6:
		f6(v6)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
		return
	case v1 := <-c1:
		f1(v1)
		return
	case v2 := <-c2:
		f2(v2)
		return
	case v3 := <-c3:
		f3(v3)
		return
	case v4 := <-c4:
		f4(v4)
		return
	case v5 := <-c5:
		f5(v5)
		return
	case v6 := <-c6:
		f6(v6)
		return
	case v7 := <-c7:
		f7(v7)
		return
	default:
	}
	select {
	case v0 := <-c0:
		f0(v0)
	case v1 := <-c1:
		f1(v1)
	case v2 := <-c2:
		f2(v2)
	case v3 := <-c3:
		f3(v3)
	case v4 := <-c4:
		f4(v4)
	case v5 := <-c5:
		f5(v5)
	case v6 := <-c6:
		f6(v6)
	case v7 := <-c7:
		f7(v7)
	case v8 := <-c8:
		f8(v8)
	default:
		df()
	}
}
func Select9OK[T0, T1, T2, T3, T4, T5, T6, T7, T8 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool), c4 <-chan T4, f4 func(T4, bool), c5 <-chan T5, f5 func(T5, bool), c6 <-chan T6, f6 func(T6, bool), c7 <-chan T7, f7 func(T7, bool), c8 <-chan T8, f8 func(T8, bool)) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	case v6, ok := <-c6:
		f6(v6, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	case v6, ok := <-c6:
		f6(v6, ok)
		return
	case v7, ok := <-c7:
		f7(v7, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	case v4, ok := <-c4:
		f4(v4, ok)
	case v5, ok := <-c5:
		f5(v5, ok)
	case v6, ok := <-c6:
		f6(v6, ok)
	case v7, ok := <-c7:
		f7(v7, ok)
	case v8, ok := <-c8:
		f8(v8, ok)
	}
}
func Select9DefaultOK[T0, T1, T2, T3, T4, T5, T6, T7, T8 any](c0 <-chan T0, f0 func(T0, bool), c1 <-chan T1, f1 func(T1, bool), c2 <-chan T2, f2 func(T2, bool), c3 <-chan T3, f3 func(T3, bool), c4 <-chan T4, f4 func(T4, bool), c5 <-chan T5, f5 func(T5, bool), c6 <-chan T6, f6 func(T6, bool), c7 <-chan T7, f7 func(T7, bool), c8 <-chan T8, f8 func(T8, bool), df func()) {
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	case v6, ok := <-c6:
		f6(v6, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
		return
	case v1, ok := <-c1:
		f1(v1, ok)
		return
	case v2, ok := <-c2:
		f2(v2, ok)
		return
	case v3, ok := <-c3:
		f3(v3, ok)
		return
	case v4, ok := <-c4:
		f4(v4, ok)
		return
	case v5, ok := <-c5:
		f5(v5, ok)
		return
	case v6, ok := <-c6:
		f6(v6, ok)
		return
	case v7, ok := <-c7:
		f7(v7, ok)
		return
	default:
	}
	select {
	case v0, ok := <-c0:
		f0(v0, ok)
	case v1, ok := <-c1:
		f1(v1, ok)
	case v2, ok := <-c2:
		f2(v2, ok)
	case v3, ok := <-c3:
		f3(v3, ok)
	case v4, ok := <-c4:
		f4(v4, ok)
	case v5, ok := <-c5:
		f5(v5, ok)
	case v6, ok := <-c6:
		f6(v6, ok)
	case v7, ok := <-c7:
		f7(v7, ok)
	case v8, ok := <-c8:
		f8(v8, ok)
	default:
		df()
	}
}
